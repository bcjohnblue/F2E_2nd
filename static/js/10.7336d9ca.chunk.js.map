{"version":3,"sources":["projects/Chatroom/pages/Main/Main.module.sass","projects/Chatroom/layout/PreSelect/PreSelect.module.sass","projects/Chatroom/components/BracketText/BracketText.module.sass","projects/Chatroom/layout/Lobby/Lobby.module.sass","projects/Chatroom/components/Drawer/Drawer.module.sass","projects/Chatroom/components/Dropdown/Dropdown.module.sass","projects/Chatroom/components/ChatArea/ChatArea.module.sass","projects/Chatroom/components/ChatRegion/ChatRegion.module.sass","projects/Chatroom/components/SettingArea/SettingArea.module.sass","projects/Chatroom/components/TypingArea/TypingArea.module.sass","projects/Chatroom/components/Emoji/Emoji.module.sass","projects/Chatroom/store/context.jsx","projects/Chatroom/mock/nameList.jsx","projects/Chatroom/utils/emojiList.jsx","projects/Chatroom/utils/index.jsx","projects/Chatroom/mock/roomList.jsx","projects/Chatroom/store/reducer.jsx","projects/Chatroom/store/state.jsx","projects/Chatroom/components/BracketText/BracketText.jsx","projects/Chatroom/utils/constant.jsx","projects/Chatroom/layout/PreSelect/PreSelect.jsx","projects/Chatroom/components/Dropdown/Dropdown.jsx","projects/Chatroom/components/Drawer/Drawer.jsx","projects/Chatroom/components/Tabs/Tabs.jsx","projects/Chatroom/components/TabPane/TabPane.jsx","projects/Chatroom/utils/colorStyle.jsx","projects/Chatroom/components/ChatRegion/ChatRegion.jsx","projects/Chatroom/components/ChatArea/ChatArea.jsx","projects/Chatroom/components/SettingArea/SettingArea.jsx","projects/Chatroom/components/Emoji/Emoji.jsx","projects/Chatroom/components/TypingArea/TypingArea.jsx","projects/Chatroom/layout/Lobby/Lobby.jsx","projects/Chatroom/pages/Main/Main.jsx"],"names":["module","exports","main","pre_select","chat_type_text","input","bracket_text","text","lobby","right_container","has_chatroom","emoji","button","drawer","open","title","icon_user","direction","header","button_container","input_container","icon_search","add_chatroom_btn","dropdown","icon_caret","dropdown_container","item","active","name","ratio","chat_area","chat_region","time","message_item","self_name_message","line","setting_area","typing_area","typing_main","text_area","toolbar","icon_paperclip","send_button","icon","dialog","emoji_container","pagination","bubble","context","React","createContext","nameList","emojiList","getRandom","type","length","index","parseInt","Math","random","round","roomList","id","data","online","total","activeChatroomListReducer","chatroom","action","activeChatroomList","selfName","console","log","addMessage","messange","activeTab","copyActiveChatroomList","JSON","parse","stringify","find","push","Object","objectSpread","addNewChatroomById","findIndex","newChatroom","message","concat","toConsumableArray","newActiveChatroomList","removeIndex","updateActiveChatroomList","filter","_","newTab","fileName","imageUrl","reducer","field","mapFieldToReducer","value","updateObj","defineProperty","defaultReducer","state","BracketText","props","children","onClick","react_default","a","createElement","className","styles","CHAT_TYPE_LIST","CHAT_ROOM_TYPE_LIST","PreSelect","chatType","setChatType","setRenderComponent","_useContext","useContext","ContextStore","dispatch","_useState","useState","_useState2","slicedToArray","step","setStep","mapStepToStepDOM","1","map","components_BracketText_BracketText","key","2","chatTypeItem","chatTypeText","Fragment","onChange","event","target","placeholder","window","alert","3","Dropdown","_clsx2","itemClick","activeId","isOpen","setIsOpen","DOM","_clsx","clsx","index_es","faCaretDown","faCaretRight","Drawer","_clsx3","_clsx4","_clsx5","_useState3","_useState4","searchText","setSearchText","_useState5","_useState6","copyRoomList","setCopyRoomList","useEffect","mainDOM","filterChatroom","filterRoomList","regex","RegExp","test","onKeyPress","faSearch","components_Dropdown_Dropdown","faUsers","Tabs","setActiveTab","onRemoveTab","closable","contentDOM","headerDOM","closeDOM","stopPropagation","faTimes","_item$props","label","isActive","tabsItemClick","TabPane","colorStyle","entries","blue","lightblue","orange","green","self","reduce","accu","curr","_curr","color","ChatRegion","linkDOM","_ref","style","messageDOM","_ref2","textDOM","src","alt","selfNameDOM","otherNameDOM","other_name_message","mapTypeToDOM","link","hours","Date","getHours","minutes","getMinutes","toString","padStart","ChatArea","chatList","components_TabPane_TabPane","components_ChatRegion_ChatRegion","components_Tabs_Tabs","SettingArea","useMemo","activeChatroom","isPrivate","indexOf","faUser","faLock","faUnlock","faCog","cursor","Emoji","emojiClick","isShow","setIsShow","page","setPage","emojiDOM","showEmojiList","slice","onEmojiClick","totalPage","ceil","pageDOM","directionClick","pageNumber","TypingArea","setText","file","image","dispatchMockMessange","setTimeout","htmlFor","faPaperclip","display","files","faImage","accept","reader","FileReader","onload","e","result","readAsDataURL","components_Emoji_Emoji","Lobby","hasChatroom","components_Drawer_Drawer","components_ChatArea_ChatArea","components_SettingArea_SettingArea","components_TypingArea_TypingArea","Main","document","renderComponent","_useReducer","useReducer","ReducerStore","StateStore","_useReducer2","dispatchChatroom","renderDOM","layout_PreSelect_PreSelect","layout_Lobby_Lobby","store_context","Provider"],"mappings":"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","file":"static/js/10.7336d9ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__r2AwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pre_select\":\"PreSelect_pre_select__3ugGB\",\"chat_type_text\":\"PreSelect_chat_type_text__3Z4T0\",\"input\":\"PreSelect_input__2B9F0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bracket_text\":\"BracketText_bracket_text__31-q3\",\"text\":\"BracketText_text__2biYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lobby\":\"Lobby_lobby__fZIdE\",\"right_container\":\"Lobby_right_container__IbdAV\",\"has_chatroom\":\"Lobby_has_chatroom__1K6N_\",\"emoji\":\"Lobby_emoji__2xzIT\",\"text\":\"Lobby_text__1co8N\",\"button\":\"Lobby_button__208g8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer\":\"Drawer_drawer__3uIXO\",\"open\":\"Drawer_open__U7Sm4\",\"title\":\"Drawer_title__3doPF\",\"icon_user\":\"Drawer_icon_user__1TiOF\",\"text\":\"Drawer_text__27he1\",\"direction\":\"Drawer_direction__2mwPd\",\"header\":\"Drawer_header__1Sq3L\",\"button_container\":\"Drawer_button_container__3PiZl\",\"button\":\"Drawer_button__2MHF-\",\"input_container\":\"Drawer_input_container__2Q9aq\",\"icon_search\":\"Drawer_icon_search__1iuzf\",\"add_chatroom_btn\":\"Drawer_add_chatroom_btn__9sUqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__2SImy\",\"title\":\"Dropdown_title__3aQDZ\",\"icon_caret\":\"Dropdown_icon_caret__1A1pk\",\"dropdown_container\":\"Dropdown_dropdown_container__3bEFa\",\"open\":\"Dropdown_open__muDv1\",\"item\":\"Dropdown_item__1x7Ji\",\"active\":\"Dropdown_active__BEUSr\",\"name\":\"Dropdown_name__2nU7c\",\"ratio\":\"Dropdown_ratio__2gOSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat_area\":\"ChatArea_chat_area__35fYn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat_region\":\"ChatRegion_chat_region__xDJL0\",\"item\":\"ChatRegion_item__19REi\",\"time\":\"ChatRegion_time__3bgVn\",\"message_item\":\"ChatRegion_message_item__123q4\",\"self_name_message\":\"ChatRegion_self_name_message__38UcH\",\"line\":\"ChatRegion_line__2QXo4\",\"text\":\"ChatRegion_text__2wlPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting_area\":\"SettingArea_setting_area__3fTVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typing_area\":\"TypingArea_typing_area__2FbeL\",\"typing_main\":\"TypingArea_typing_main__2Je2I\",\"text_area\":\"TypingArea_text_area__2UIWN\",\"toolbar\":\"TypingArea_toolbar__1WIiV\",\"icon_paperclip\":\"TypingArea_icon_paperclip__1B7-5\",\"send_button\":\"TypingArea_send_button__2Vqew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emoji\":\"Emoji_emoji__oGqMW\",\"icon\":\"Emoji_icon__2nULh\",\"dialog\":\"Emoji_dialog__1weOb\",\"direction\":\"Emoji_direction__3tExD\",\"emoji_container\":\"Emoji_emoji_container__2kRCU\",\"pagination\":\"Emoji_pagination__33JPI\",\"bubble\":\"Emoji_bubble__vSNXO\"};","import React from 'react';\r\n\r\nconst context = React.createContext({});\r\n\r\nexport default context;\r\n","export default [\r\n  '埼玉',\r\n  '龍捲',\r\n  '悟空',\r\n  '小傑',\r\n  '兵長',\r\n  '哆啦A夢',\r\n  '柯南',\r\n  '兩津',\r\n  '銀時',\r\n  '小新'\r\n];\r\n","export default [\r\n  '(｀◕‸◕´+)',\r\n  'ಠ_ರೃ',\r\n  '(*｀へ´*)',\r\n  '-`д´-',\r\n  '(*≧m≦*)',\r\n  'ಠ_ರೃ',\r\n  '(*｀へ´*)',\r\n  '(*￣m￣)',\r\n  '(#ಠQಠ#)',\r\n  '(ಥ⌣ಥ)',\r\n  'ఠ ͟ಠ',\r\n  '(｡☉︵ ಠ╬)',\r\n  'ʕ •̀ o •́ ʔ',\r\n  '╭∩╮(︶︿︶)╭∩╮',\r\n  '凸(¬‿¬)',\r\n  'ᕕ༼ ͠ຈ Ĺ̯ ͠ຈ ༽┌∩┐',\r\n  '(´･益･｀*)'\r\n];\r\n","import nameList from '../mock/nameList';\r\nimport emojiList from './emojiList';\r\n\r\nexport const getRandom = type => {\r\n  switch (type) {\r\n    case 'name': {\r\n      const length = nameList.length;\r\n      const index = parseInt(Math.random() * length);\r\n\r\n      return nameList[index];\r\n    }\r\n    case 'id': {\r\n      const MAX_LIMIT = 1e3;\r\n\r\n      return Math.round(Math.random() * MAX_LIMIT);\r\n    }\r\n    case 'message': {\r\n      const length = emojiList.length;\r\n      const index = parseInt(Math.random() * length);\r\n\r\n      return emojiList[index];\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","export default [\r\n  {\r\n    id: 'C001',\r\n    name: '聊天室名字 1',\r\n    data: [],\r\n    online: 3,\r\n    total: 15\r\n  },\r\n  {\r\n    id: 'C002',\r\n    name: '聊天室名字 2',\r\n    data: [],\r\n    online: 2,\r\n    total: 4\r\n  },\r\n  {\r\n    id: 'C003',\r\n    name: '聊天室名字 3',\r\n    data: [],\r\n    online: 3,\r\n    total: 5\r\n  },\r\n  {\r\n    id: 'C004',\r\n    name: '聊天室名字 4',\r\n    data: [],\r\n    online: 12,\r\n    total: 20\r\n  }\r\n];\r\n","import { getRandom } from '../utils';\r\nimport roomList from '../mock/roomList';\r\n\r\nconst activeChatroomListReducer = (chatroom, action) => {\r\n  const { activeChatroomList, selfName } = chatroom;\r\n  const { type } = action;\r\n  console.log(activeChatroomList);\r\n\r\n  const addMessage = messange => {\r\n    const { activeTab } = chatroom;\r\n    const copyActiveChatroomList = JSON.parse(\r\n      JSON.stringify(activeChatroomList)\r\n    );\r\n    const activeChatroom = copyActiveChatroomList.find(\r\n      item => item.id === activeTab\r\n    );\r\n\r\n    activeChatroom.data.push(messange);\r\n\r\n    return {\r\n      ...chatroom,\r\n      activeChatroomList: copyActiveChatroomList\r\n    };\r\n  };\r\n\r\n  const addNewChatroomById = id => {\r\n    const hasExistChatroom = ~activeChatroomList.findIndex(\r\n      item => item.id === id\r\n    );\r\n    if (hasExistChatroom) return { ...chatroom, activeTab: id };\r\n\r\n    const newChatroom = roomList.find(item => item.id === id);\r\n    newChatroom.data.push({\r\n      type: 'link',\r\n      message: { name: selfName }\r\n    });\r\n\r\n    return {\r\n      ...chatroom,\r\n      activeTab: id,\r\n      activeChatroomList: [...activeChatroomList, newChatroom]\r\n    };\r\n  };\r\n\r\n  switch (type) {\r\n    case 'ONETOONE': {\r\n      const id = getRandom('id');\r\n      const newActiveChatroomList = {\r\n        id,\r\n        name: `隨機聊天室 ${id}`,\r\n        total: 2,\r\n        data: [\r\n          {\r\n            type: 'link',\r\n            message: {\r\n              name: getRandom('name')\r\n            }\r\n          },\r\n          {\r\n            type: 'link',\r\n            message: {\r\n              name: selfName\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n      return {\r\n        ...chatroom,\r\n        activeTab: id,\r\n        activeChatroomList: [...activeChatroomList, newActiveChatroomList]\r\n      };\r\n    }\r\n    case 'ENTERGROUP': {\r\n      const length = roomList.length;\r\n      const index = parseInt(Math.random() * length);\r\n      const id = roomList[index].id;\r\n\r\n      return addNewChatroomById(id);\r\n    }\r\n    case 'REMOVE': {\r\n      let { activeTab } = chatroom;\r\n      const { removeIndex } = action;\r\n      const updateActiveChatroomList = activeChatroomList.filter(\r\n        (_, index) => index !== removeIndex\r\n      );\r\n\r\n      const isRemoveActiveTab =\r\n        activeTab === activeChatroomList[removeIndex].id;\r\n      if (isRemoveActiveTab) {\r\n        const newTab =\r\n          activeChatroomList[removeIndex + 1] ||\r\n          activeChatroomList[removeIndex - 1];\r\n\r\n        if (newTab) {\r\n          activeTab = newTab.id;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...chatroom,\r\n        activeTab,\r\n        activeChatroomList: updateActiveChatroomList\r\n      };\r\n    }\r\n    case 'ADD': {\r\n      const { id } = action;\r\n\r\n      return addNewChatroomById(id);\r\n    }\r\n    case 'SENDMESSANGE': {\r\n      const { text, fileName, imageUrl } = action;\r\n\r\n      const message = {\r\n        type: 'message',\r\n        message: {\r\n          name: selfName,\r\n          text,\r\n          fileName,\r\n          imageUrl\r\n        }\r\n      };\r\n\r\n      return addMessage(message);\r\n    }\r\n    case 'ADDMOCKMESSANGE': {\r\n      const mockMessange = {\r\n        type: 'message',\r\n        message: {\r\n          name: getRandom('name'),\r\n          text: getRandom('message')\r\n        }\r\n      };\r\n\r\n      return addMessage(mockMessange);\r\n    }\r\n    default:\r\n      return chatroom;\r\n  }\r\n};\r\n\r\nconst defaultReducer = (chatroom, action) => {\r\n  const { type, field, value } = action;\r\n\r\n  switch (type) {\r\n    case 'SET':\r\n      const updateObj = {\r\n        [field]: value\r\n      };\r\n\r\n      return { ...chatroom, ...updateObj };\r\n    default:\r\n      return chatroom;\r\n  }\r\n};\r\n\r\nconst reducer = (chatroom, action) => {\r\n  const { field } = action;\r\n\r\n  const mapFieldToReducer = {\r\n    activeChatroomList: activeChatroomListReducer\r\n  };\r\n\r\n  return mapFieldToReducer[field]\r\n    ? mapFieldToReducer[field](chatroom, action)\r\n    : defaultReducer(chatroom, action);\r\n};\r\n\r\nexport default reducer;\r\n","const state = {\r\n  selfName: '',\r\n  activeTab: null,\r\n  activeChatroomList: []\r\n};\r\n\r\nexport default state;\r\n","import React from 'react';\r\nimport styles from './BracketText.module.sass';\r\n\r\nconst BracketText = props => {\r\n  const { children, onClick } = props;\r\n\r\n  return (\r\n    <div className={styles.bracket_text} onClick={onClick}>\r\n      <span>[</span>\r\n      <span className={styles.text}>{children}</span>\r\n      <span>]</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BracketText;\r\n","export const CHAT_TYPE_LIST = [\r\n  {\r\n    type: 'anonymous',\r\n    text: '匿名聊天'\r\n  },\r\n  {\r\n    type: 'nickname',\r\n    text: '暱稱聊天'\r\n  }\r\n];\r\n\r\nexport const CHAT_ROOM_TYPE_LIST = [\r\n  {\r\n    type: '1to1',\r\n    text: '隨機配對1對1聊天'\r\n  },\r\n  {\r\n    type: 'all',\r\n    text: '聊天大廳'\r\n  }\r\n];\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport styles from './PreSelect.module.sass';\r\n\r\nimport { useContext } from 'react';\r\nimport ContextStore from '../../store/context';\r\n\r\nimport BracketText from '../../components/BracketText/BracketText';\r\n\r\nimport { CHAT_TYPE_LIST, CHAT_ROOM_TYPE_LIST } from '../../utils/constant';\r\n\r\nconst PreSelect = props => {\r\n  const { chatType, setChatType } = props;\r\n  const { setRenderComponent } = props;\r\n  const { selfName, dispatch } = useContext(ContextStore);\r\n  const [step, setStep] = useState(1);\r\n\r\n  const firstStepDOM = (() => {\r\n    const onClick = chatType => {\r\n      console.log(chatType);\r\n\r\n      setChatType(chatType);\r\n    };\r\n    return CHAT_TYPE_LIST.map((item, index) => {\r\n      const { type, text } = item;\r\n      return (\r\n        <BracketText\r\n          onClick={() => {\r\n            onClick(type);\r\n            setStep(2);\r\n          }}\r\n          key={index}\r\n        >\r\n          {text}\r\n        </BracketText>\r\n      );\r\n    });\r\n  })();\r\n  const secondStepDOM = (() => {\r\n    const onChange = event => {\r\n      dispatch({ type: 'SET', field: 'selfName', value: event.target.value });\r\n    };\r\n    const chatTypeItem = CHAT_TYPE_LIST.find(item => item.type === chatType);\r\n    const chatTypeText = chatTypeItem ? chatTypeItem.text : '';\r\n\r\n    return (\r\n      <>\r\n        <div className={styles.chat_type_text}>{chatTypeText}</div>\r\n        <input\r\n          type=\"text\"\r\n          value={selfName}\r\n          onChange={onChange}\r\n          className={styles.input}\r\n          placeholder=\"請輸入\"\r\n        />\r\n        <BracketText\r\n          onClick={() => {\r\n            if (!selfName.length) {\r\n              window.alert('請輸入名稱');\r\n              return;\r\n            }\r\n            setStep(3);\r\n          }}\r\n        >\r\n          確定\r\n        </BracketText>\r\n      </>\r\n    );\r\n  })();\r\n  const thirdStepDOM = (() => {\r\n    const onClick = chatRoomType => {\r\n      if (chatRoomType === '1to1')\r\n        dispatch({ type: 'ONETOONE', field: 'activeChatroomList' });\r\n\r\n      setRenderComponent('Lobby');\r\n    };\r\n    return CHAT_ROOM_TYPE_LIST.map((item, index) => {\r\n      let { type, text } = item;\r\n      if (type === 'all') text = `進入${text}`;\r\n\r\n      return (\r\n        <BracketText\r\n          onClick={() => {\r\n            onClick(type);\r\n          }}\r\n          key={index}\r\n        >\r\n          {text}\r\n        </BracketText>\r\n      );\r\n    });\r\n  })();\r\n\r\n  const mapStepToStepDOM = {\r\n    1: firstStepDOM,\r\n    2: secondStepDOM,\r\n    3: thirdStepDOM\r\n  };\r\n\r\n  return <div className={styles.pre_select}>{mapStepToStepDOM[step]}</div>;\r\n};\r\n\r\nexport default PreSelect;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport styles from './Dropdown.module.sass';\r\nimport clsx from 'clsx';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Dropdown = props => {\r\n  const { title, data, itemClick, activeId } = props;\r\n  const { open } = props;\r\n  const [isOpen, setIsOpen] = useState(open ? true : false);\r\n\r\n  const length = data.length;\r\n  const DOM = data.map(item => {\r\n    const { id, name, online, total } = item;\r\n    return (\r\n      <div\r\n        className={clsx({\r\n          [styles.item]: true,\r\n          [styles.active]: activeId === id\r\n        })}\r\n        key={id}\r\n        onClick={() => {\r\n          itemClick(id);\r\n        }}\r\n      >\r\n        <span>{id}</span>\r\n        <span className={styles.name}>{name}</span>\r\n        <span className={styles.ratio}>\r\n          {online}/{total}\r\n        </span>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles.dropdown}>\r\n      <div\r\n        className={styles.title}\r\n        onClick={() => {\r\n          setIsOpen(!isOpen);\r\n        }}\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={isOpen ? faCaretDown : faCaretRight}\r\n          className={styles.icon_caret}\r\n        ></FontAwesomeIcon>\r\n        {title} ({length})\r\n      </div>\r\n      <div\r\n        className={clsx({\r\n          [styles.dropdown_container]: true,\r\n          [styles.open]: isOpen && length\r\n        })}\r\n      >\r\n        {DOM}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport styles from './Drawer.module.sass';\r\nimport clsx from 'clsx';\r\n\r\nimport { useContext } from 'react';\r\nimport ContextStore from '../../store/context';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Dropdown from '../Dropdown/Dropdown';\r\n\r\nimport roomList from '../../mock/roomList';\r\n\r\nconst Drawer = props => {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [copyRoomList, setCopyRoomList] = useState([]);\r\n  const { activeTab, dispatch } = useContext(ContextStore);\r\n\r\n  useEffect(() => {\r\n    setCopyRoomList(roomList);\r\n  }, []);\r\n\r\n  const mainDOM = (() => {\r\n    const filterChatroom = () => {\r\n      const filterRoomList = roomList.filter(item => {\r\n        const { id, name } = item;\r\n        const regex = new RegExp(searchText);\r\n\r\n        return regex.test(id) || regex.test(name);\r\n      });\r\n\r\n      setCopyRoomList(filterRoomList);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className={styles.header}>\r\n          <div className={styles.button_container}>\r\n            <span\r\n              className={styles.button}\r\n              onClick={() => {\r\n                dispatch({ type: 'ONETOONE', field: 'activeChatroomList' });\r\n              }}\r\n            >\r\n              隨機1對1配對\r\n            </span>\r\n            <span\r\n              className={styles.button}\r\n              onClick={() => {\r\n                dispatch({ type: 'ENTERGROUP', field: 'activeChatroomList' });\r\n              }}\r\n            >\r\n              隨機進入群組\r\n            </span>\r\n          </div>\r\n          <div className={styles.input_container}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"搜尋聊天室名稱或編號\"\r\n              value={searchText}\r\n              onChange={event => {\r\n                setSearchText(event.target.value);\r\n              }}\r\n              onKeyPress={event => {\r\n                if (event.key === 'Enter') {\r\n                  filterChatroom();\r\n                }\r\n              }}\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faSearch}\r\n              className={styles.icon_search}\r\n              onClick={() => {\r\n                filterChatroom();\r\n              }}\r\n            ></FontAwesomeIcon>\r\n          </div>\r\n        </div>\r\n        <Dropdown\r\n          title=\"公開聊天室\"\r\n          data={copyRoomList}\r\n          open\r\n          itemClick={id => {\r\n            dispatch({ type: 'ADD', field: 'activeChatroomList', id });\r\n          }}\r\n          activeId={activeTab}\r\n        ></Dropdown>\r\n        <Dropdown title=\"最近加入的聊天室\" data={[]}></Dropdown>\r\n        <div className={clsx(styles.button, styles.add_chatroom_btn)}>\r\n          新增聊天室 (暫未開放)\r\n        </div>\r\n      </>\r\n    );\r\n  })();\r\n\r\n  return (\r\n    <div className={clsx({ [styles.drawer]: true, [styles.open]: isOpen })}>\r\n      <div className={clsx({ [styles.title]: true, [styles.open]: isOpen })}>\r\n        <FontAwesomeIcon\r\n          icon={faUsers}\r\n          className={clsx({ [styles.icon_user]: true, [styles.open]: isOpen })}\r\n        ></FontAwesomeIcon>\r\n        <span className={clsx({ [styles.text]: true, [styles.open]: isOpen })}>\r\n          聊天大廳\r\n        </span>\r\n        <span\r\n          className={clsx({ [styles.direction]: true, [styles.open]: isOpen })}\r\n          onClick={() => {\r\n            setIsOpen(!isOpen);\r\n          }}\r\n        >\r\n          &gt;\r\n        </span>\r\n      </div>\r\n      {isOpen ? mainDOM : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Drawer;\r\n","import React from 'react';\r\nimport './Tabs.sass';\r\nimport clsx from 'clsx';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Tabs = props => {\r\n  const { activeTab, setActiveTab, onRemoveTab, children } = props;\r\n  const { closable } = props;\r\n\r\n  const contentDOM = children.filter(item => item.props.name === activeTab);\r\n\r\n  const headerDOM = (() => {\r\n    const tabsItemClick = name => {\r\n      setActiveTab(name);\r\n    };\r\n    const closeClick = deleteIndex => {\r\n      onRemoveTab(deleteIndex);\r\n    };\r\n\r\n    const closeDOM = index => (\r\n      <span\r\n        onClick={event => {\r\n          event.stopPropagation();\r\n          closeClick(index);\r\n        }}\r\n      >\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </span>\r\n    );\r\n\r\n    return children.map((item, index) => {\r\n      const { name, label } = item.props;\r\n      const isActive = name === activeTab;\r\n\r\n      return (\r\n        <div\r\n          className={clsx('tabs__item', { active: isActive })}\r\n          key={index}\r\n          onClick={() => {\r\n            tabsItemClick(name);\r\n          }}\r\n        >\r\n          {label}\r\n          {closable ? closeDOM(index) : null}\r\n        </div>\r\n      );\r\n    });\r\n  })();\r\n\r\n  return (\r\n    <div className=\"tabs\">\r\n      <div className=\"tabs__header\">{headerDOM}</div>\r\n      <div className=\"tabs__content\">{contentDOM}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React from 'react';\r\nimport './TabPane.sass';\r\n\r\nconst TabPane = props => {\r\n  const { children } = props;\r\n\r\n  return <div className=\"tab_pane\">{children}</div>;\r\n};\r\n\r\nexport default TabPane;\r\n","const colors = {\r\n  blue: '#499CD6',\r\n  lightblue: '#9CDCFE',\r\n  orange: '#CE9178',\r\n  green: '#6A9955',\r\n  time: '#707070',\r\n  self: '#6A9955'\r\n};\r\n\r\nconst colorStyle = Object.entries(colors).reduce((accu, curr) => {\r\n  const [key, value] = curr;\r\n  return { ...accu, ...{ [key]: { color: value } } };\r\n}, {});\r\n\r\nexport default colorStyle;\r\n","import React from 'react';\r\nimport styles from './ChatRegion.module.sass';\r\nimport clsx from 'clsx';\r\n\r\nimport { useContext } from 'react';\r\nimport ContextStore from '../../store/context';\r\n\r\nimport colorStyle from '../../utils/colorStyle';\r\n\r\nconst ChatRegion = props => {\r\n  const { data } = props;\r\n  const { selfName } = useContext(ContextStore);\r\n\r\n  const linkDOM = ({ name }) => {\r\n    return (\r\n      <>\r\n        <span>&lt;</span>\r\n        <span style={colorStyle.blue}>link</span>\r\n        <span style={colorStyle.lightblue}>&nbsp;rel</span>\r\n        <span>=</span>\r\n        <span style={colorStyle.orange}>\"random\"</span>\r\n        <span style={colorStyle.lightblue}>&nbsp;href</span>\r\n        <span>=</span>\r\n        <span style={colorStyle.orange}>\"{name}已進入聊天室\"</span>\r\n        <span>&gt;</span>\r\n      </>\r\n    );\r\n  };\r\n  const messageDOM = ({ name, text, fileName, imageUrl }) => {\r\n    const textDOM = (() => {\r\n      if (imageUrl) {\r\n        return (\r\n          <img\r\n            src={imageUrl}\r\n            className={clsx(styles.line, styles.text)}\r\n            alt=\"\"\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <div className={clsx(styles.line, styles.text)}>\r\n            {fileName ? `您傳送了${fileName}檔案` : text}\r\n          </div>\r\n        );\r\n      }\r\n    })();\r\n    const selfNameDOM = (\r\n      <>\r\n        <div className={styles.self_name_message} style={colorStyle.green}>\r\n          <div className={styles.line}>\r\n            <span>&lt;!--{name}</span>\r\n          </div>\r\n          {textDOM}\r\n          <div className={styles.line}>\r\n            <span>--&gt;</span>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n    const otherNameDOM = (\r\n      <>\r\n        <div className={styles.other_name_message}>\r\n          <div className={styles.line}>\r\n            <span>&lt;</span>\r\n            <span style={colorStyle.orange}>{name}</span>\r\n            <span>&gt;</span>\r\n          </div>\r\n          <div className={clsx(styles.line, styles.text)}>{text}</div>\r\n          <div className={styles.line}>\r\n            <span>&lt;/</span>\r\n            <span style={colorStyle.orange}>{name}</span>\r\n            <span>&gt;</span>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n\r\n    return name === selfName ? selfNameDOM : otherNameDOM;\r\n  };\r\n\r\n  const DOM = data.map((item, index) => {\r\n    const { type, message } = item;\r\n\r\n    const mapTypeToDOM = {\r\n      link: linkDOM(message),\r\n      message: messageDOM(message)\r\n    };\r\n\r\n    const time = (() => {\r\n      const hours = new Date().getHours();\r\n      const minutes = new Date()\r\n        .getMinutes()\r\n        .toString()\r\n        .padStart(2, 0);\r\n\r\n      return `${hours}：${minutes}`;\r\n    })();\r\n\r\n    return (\r\n      <div className={styles.item} key={index}>\r\n        <span className={styles.time} style={colorStyle.time}>\r\n          {time}\r\n        </span>\r\n        <div className={styles.message_item}>{mapTypeToDOM[type]}</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div className={styles.chat_region}>{DOM}</div>;\r\n};\r\n\r\nexport default ChatRegion;\r\n","import React from 'react';\r\nimport styles from './ChatArea.module.sass';\r\n\r\nimport { useContext } from 'react';\r\nimport ContextStore from '../../store/context';\r\n\r\nimport Tabs from '../Tabs/Tabs';\r\nimport TabPane from '../TabPane/TabPane';\r\n\r\nimport ChatRegion from '../../components/ChatRegion/ChatRegion';\r\n\r\nconst ChatArea = props => {\r\n  const { activeChatroomList, activeTab, dispatch } = useContext(ContextStore);\r\n\r\n  const DOM = activeChatroomList.map(chatList => {\r\n    const { id, name, data } = chatList;\r\n\r\n    return (\r\n      <TabPane label={name} name={id} key={id}>\r\n        <ChatRegion data={data} />\r\n      </TabPane>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles.chat_area}>\r\n      <Tabs\r\n        activeTab={activeTab}\r\n        setActiveTab={value => {\r\n          dispatch({ type: 'SET', field: 'activeTab', value });\r\n        }}\r\n        onRemoveTab={removeIndex => {\r\n          dispatch({\r\n            type: 'REMOVE',\r\n            field: 'activeChatroomList',\r\n            removeIndex\r\n          });\r\n        }}\r\n        closable\r\n      >\r\n        {DOM}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatArea;\r\n","import React from 'react';\r\nimport styles from './SettingArea.module.sass';\r\n\r\nimport { useMemo } from 'react';\r\n\r\nimport { useContext } from 'react';\r\nimport ContextStore from '../../store/context';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUnlock } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SettingArea = props => {\r\n  const { activeTab, activeChatroomList } = useContext(ContextStore);\r\n\r\n  const chatroom = useMemo(() => {\r\n    const activeChatroom = activeChatroomList.find(\r\n      item => item.id === activeTab\r\n    );\r\n\r\n    if (activeChatroom) {\r\n      const { total, name } = activeChatroom;\r\n      const isPrivate = ~name.indexOf('隨機');\r\n\r\n      return {\r\n        total,\r\n        isPrivate\r\n      };\r\n    } else {\r\n      return {};\r\n    }\r\n  }, [activeTab, activeChatroomList]);\r\n\r\n  return (\r\n    <div className={styles.setting_area}>\r\n      <FontAwesomeIcon icon={faUser}></FontAwesomeIcon>\r\n      <span>{chatroom.total}</span>\r\n      <FontAwesomeIcon icon={chatroom.isPrivate ? faLock : faUnlock} />\r\n      <span>{chatroom.isPrivate ? '私密' : '公開'}</span>\r\n      <FontAwesomeIcon icon={faCog} style={{ cursor: 'pointer' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingArea;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport styles from './Emoji.module.sass';\r\n\r\nimport emojiList from '../../utils/emojiList';\r\n\r\nconst Emoji = props => {\r\n  const { emojiClick } = props;\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const emojiDOM = (() => {\r\n    const EMOJI_NUMBER_PER_PAGE = 12;\r\n    const showEmojiList = emojiList.slice(\r\n      EMOJI_NUMBER_PER_PAGE * (page - 1),\r\n      EMOJI_NUMBER_PER_PAGE * page\r\n    );\r\n    const onEmojiClick = emoji => {\r\n      emojiClick(emoji);\r\n      setIsShow(false);\r\n    };\r\n    const DOM = showEmojiList.map((emoji, index) => {\r\n      return (\r\n        <div\r\n          key={index}\r\n          onClick={() => {\r\n            onEmojiClick(emoji);\r\n          }}\r\n        >\r\n          {emoji}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const totalPage = Math.ceil(emojiList.length / EMOJI_NUMBER_PER_PAGE);\r\n    const pageDOM = (\r\n      <div key=\"page\" className={styles.pagination}>\r\n        {page}/{totalPage}\r\n      </div>\r\n    );\r\n\r\n    return [...DOM, pageDOM];\r\n  })();\r\n\r\n  const iconClick = () => {\r\n    setIsShow(!isShow);\r\n  };\r\n  const directionClick = pageNumber => {\r\n    setPage(page + pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.emoji}>\r\n      <span className={styles.icon} onClick={iconClick}>\r\n        (｀◕‸◕´+)\r\n      </span>\r\n      {isShow ? (\r\n        <>\r\n          <div className={styles.dialog}>\r\n            <div\r\n              className={styles.direction}\r\n              onClick={() => {\r\n                directionClick(-1);\r\n              }}\r\n            >\r\n              &lt;\r\n            </div>\r\n            <div className={styles.emoji_container}>{emojiDOM}</div>\r\n            <div\r\n              className={styles.direction}\r\n              onClick={() => {\r\n                directionClick(1);\r\n              }}\r\n            >\r\n              &gt;\r\n            </div>\r\n          </div>\r\n          <div className={styles.bubble}></div>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Emoji;\r\n","import React from 'react';\r\nimport styles from './TypingArea.module.sass';\r\n\r\nimport { useState } from 'react';\r\n\r\nimport { useContext } from 'react';\r\nimport ContextStore from '../../store/context';\r\n\r\nimport Emoji from '../Emoji/Emoji';\r\n\r\nimport colorStyle from '../../utils/colorStyle';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperclip } from '@fortawesome/free-solid-svg-icons';\r\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\r\n\r\nconst TypingArea = props => {\r\n  const { selfName, dispatch } = useContext(ContextStore);\r\n  const [text, setText] = useState('');\r\n  const [file] = useState('');\r\n  const [image] = useState('');\r\n\r\n  const dispatchMockMessange = () => {\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: 'ADDMOCKMESSANGE',\r\n        field: 'activeChatroomList'\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const emojiClick = emoji => {\r\n    setText(text + emoji);\r\n  };\r\n  const sendClick = () => {\r\n    if (!text.length) return;\r\n    dispatch({\r\n      type: 'SENDMESSANGE',\r\n      field: 'activeChatroomList',\r\n      text\r\n    });\r\n    dispatchMockMessange();\r\n    setText('');\r\n  };\r\n\r\n  const fileChangeHandler = event => {\r\n    const fileName = event.target.files[0].name;\r\n\r\n    dispatch({\r\n      type: 'SENDMESSANGE',\r\n      field: 'activeChatroomList',\r\n      fileName: fileName\r\n    });\r\n    dispatchMockMessange();\r\n  };\r\n  const imageChangeHandler = event => {\r\n    const file = event.target.files[0];\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = function(e) {\r\n      dispatch({\r\n        type: 'SENDMESSANGE',\r\n        field: 'activeChatroomList',\r\n        imageUrl: e.target.result\r\n      });\r\n      dispatchMockMessange();\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.typing_area}>\r\n      <div className={styles.typing_main}>\r\n        <span style={colorStyle.self}>{selfName}</span>\r\n        <span>&nbsp;&gt;</span>\r\n        <textarea\r\n          className={styles.text_area}\r\n          value={text}\r\n          onChange={event => {\r\n            setText(event.target.value);\r\n          }}\r\n        ></textarea>\r\n      </div>\r\n      <div className={styles.toolbar}>\r\n        <label htmlFor=\"upload_attachment\">\r\n          <FontAwesomeIcon\r\n            icon={faPaperclip}\r\n            className={styles.icon_paperclip}\r\n          />\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"upload_attachment\"\r\n          style={{ display: 'none' }}\r\n          value={file}\r\n          onChange={fileChangeHandler}\r\n        />\r\n        <label htmlFor=\"upload_image\">\r\n          <FontAwesomeIcon icon={faImage} />\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"upload_image\"\r\n          accept=\"image/*\"\r\n          style={{ display: 'none' }}\r\n          value={image}\r\n          onChange={imageChangeHandler}\r\n        />\r\n        <Emoji emojiClick={emojiClick}></Emoji>\r\n        <span className={styles.send_button} onClick={sendClick}>\r\n          傳送&nbsp;&gt;\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingArea;\r\n","import React from 'react';\r\nimport styles from './Lobby.module.sass';\r\nimport clsx from 'clsx';\r\n\r\nimport { useContext } from 'react';\r\nimport ContextStore from '../../store/context';\r\n\r\nimport Drawer from '../../components/Drawer/Drawer';\r\nimport ChatArea from '../../components/ChatArea/ChatArea';\r\nimport SettingArea from '../../components/SettingArea/SettingArea';\r\nimport TypingArea from '../../components/TypingArea/TypingArea';\r\n\r\nconst Lobby = props => {\r\n  const { activeChatroomList, dispatch } = useContext(ContextStore);\r\n  const hasChatroom = !!activeChatroomList.length;\r\n\r\n  return (\r\n    <div className={styles.lobby}>\r\n      <Drawer />\r\n      <div\r\n        className={clsx({\r\n          [styles.right_container]: true,\r\n          [styles.has_chatroom]: hasChatroom\r\n        })}\r\n      >\r\n        {hasChatroom ? (\r\n          <>\r\n            <ChatArea />\r\n            <SettingArea></SettingArea>\r\n            <TypingArea />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className={styles.emoji}>ヾ(＠゜▽゜＠）ノ</div>\r\n            <div className={styles.text}>馬上開始你的聊天吧~</div>\r\n            <div\r\n              className={styles.button}\r\n              onClick={() => {\r\n                dispatch({ type: 'ONETOONE', field: 'activeChatroomList' });\r\n              }}\r\n            >\r\n              隨機1對1配對\r\n            </div>\r\n            <div\r\n              className={styles.button}\r\n              onClick={() => {\r\n                dispatch({ type: 'ENTERGROUP', field: 'activeChatroomList' });\r\n              }}\r\n            >\r\n              隨機進入群組\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lobby;\r\n","import React from 'react';\r\nimport { useState, useReducer } from 'react';\r\nimport styles from './Main.module.sass';\r\n\r\nimport ContextStore from '../../store/context';\r\nimport ReducerStore from '../../store/reducer';\r\nimport StateStore from '../../store/state';\r\n\r\nimport PreSelect from '../../layout/PreSelect/PreSelect';\r\nimport Lobby from '../../layout/Lobby/Lobby';\r\n\r\nconst Main = () => {\r\n  document.title = 'VS Code 聊天室';\r\n\r\n  const [chatType, setChatType] = useState('');\r\n  const [renderComponent, setRenderComponent] = useState('PreSelect');\r\n\r\n  const value = (() => {\r\n    const [chatroom, dispatchChatroom] = useReducer(ReducerStore, StateStore);\r\n\r\n    return {\r\n      ...chatroom,\r\n      dispatch: dispatchChatroom\r\n    };\r\n  })();\r\n\r\n  const renderDOM = (() => {\r\n    switch (renderComponent) {\r\n      case 'PreSelect':\r\n        return (\r\n          <PreSelect\r\n            chatType={chatType}\r\n            setChatType={setChatType}\r\n            setRenderComponent={setRenderComponent}\r\n          />\r\n        );\r\n      case 'Lobby':\r\n        return <Lobby />;\r\n      default:\r\n        break;\r\n    }\r\n  })();\r\n\r\n  return (\r\n    <ContextStore.Provider value={value}>\r\n      <div className={styles.main}>{renderDOM}</div>\r\n    </ContextStore.Provider>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"sourceRoot":""}