{"version":3,"sources":["../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/dom-helpers/class/addClass.js","../node_modules/dom-helpers/class/hasClass.js","../node_modules/dom-helpers/class/removeClass.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","__webpack_require__","d","__webpack_exports__","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","a","createContext","_extends","assign","arguments","hasOwnProperty","call","apply","this","config","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition_Transition","_React$Component","Transition","props","context","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","node","react_dom_default","findDOMNode","performEnter","performExit","setState","_this2","appearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","render","_this$props","children","childProps","objectWithoutPropertiesLoose","react_default","createElement","TransitionGroupContext","Provider","value","child","Children","only","cloneElement","Component","noop","contextType","propTypes","defaultProps","_interopRequireDefault","exports","__esModule","default","element","className","classList","add","_hasClass","setAttribute","baseVal","module","contains","replaceClassName","origClass","classToRemove","replace","RegExp","remove","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","dom_helpers_class_addClass__WEBPACK_IMPORTED_MODULE_4__","dom_helpers_class_addClass__WEBPACK_IMPORTED_MODULE_4___default","dom_helpers_class_removeClass__WEBPACK_IMPORTED_MODULE_5__","dom_helpers_class_removeClass__WEBPACK_IMPORTED_MODULE_5___default","react__WEBPACK_IMPORTED_MODULE_6__","react__WEBPACK_IMPORTED_MODULE_6___default","_Transition__WEBPACK_IMPORTED_MODULE_7__","removeClass","classes","split","forEach","c","CSSTransition","_len","args","Array","_key","concat","appliedClasses","removeClasses","addClass","type","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","scrollTop","_addClass","_this$appliedClasses$","base","done","obj"],"mappings":"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","file":"static/js/18.2175557b.chunk.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import React from 'react';\nexport default React.createContext(null);","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n      var node = ReactDOM.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      // allows for nested Transitions\n      return React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, children(status, childProps));\n    }\n\n    var child = React.Children.only(children);\n    return (// allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, React.cloneElement(child, childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the\n   * `<Transition>` component mounts. If you want to transition on the first\n   * mount set `appear` to `true`, and the component will transition in as soon\n   * as the `<Transition>` mounts.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\nexport default Transition;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = addClass;\n\nvar _hasClass = _interopRequireDefault(require(\"./hasClass\"));\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = hasClass;\n\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/class/addClass';\nimport removeOneClass from 'dom-helpers/class/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\n * using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (node, appearing) {\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    if (type === 'appear' && phase === 'done') {\n      className += \" \" + this.getClassNames('enter').doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    this.appliedClasses[type][phase] = className;\n\n    _addClass(node, className);\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided and it\n   * will be suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-appear`, `fade-appear-active`,\n   * `fade-appear-done`, `fade-enter`, `fade-enter-active`, `fade-enter-done`,\n   * `fade-exit`, `fade-exit-active`, and `fade-exit-done`.\n   *\n   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.\n   * This allows you to define different behavior for when appearing is done and\n   * when regular entering is done, using selectors like\n   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an\n   * epic entrance animation when element first appears in the DOM using\n   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   * simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;"],"sourceRoot":""}